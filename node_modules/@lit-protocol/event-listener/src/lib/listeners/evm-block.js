"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.EVMBlockListener = void 0;
const ethers_1 = require("ethers");
const constants_1 = require("@lit-protocol/constants");
const listener_1 = require("./listener");
class EVMBlockListener extends listener_1.Listener {
    constructor(rpcUrl = constants_1.LIT_EVM_CHAINS['ethereum'].rpcUrls[0]) {
        const provider = new ethers_1.ethers.providers.JsonRpcProvider(rpcUrl);
        super({
            start: async () => {
                provider.on('block', async (blockNumber) => {
                    const block = await provider.getBlock(blockNumber);
                    if (block) {
                        this.emit(block);
                    }
                });
            },
            stop: async () => {
                provider.removeAllListeners('block');
            },
        });
    }
}
exports.EVMBlockListener = EVMBlockListener;
//# sourceMappingURL=evm-block.js.map