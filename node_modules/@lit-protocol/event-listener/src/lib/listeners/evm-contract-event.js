"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.EVMContractEventListener = void 0;
const ethers_1 = require("ethers");
const listener_1 = require("./listener");
class EVMContractEventListener extends listener_1.Listener {
    constructor(rpcUrl, contractInfo, eventInfo) {
        const provider = new ethers_1.ethers.providers.JsonRpcProvider(rpcUrl);
        const contract = new ethers_1.ethers.Contract(contractInfo.address, contractInfo.abi, provider);
        super({
            start: async () => {
                const eventFilter = contract.filters[eventInfo.name](...(eventInfo.filter || []));
                contract.on(eventFilter, (...args) => {
                    const event = args[args.length - 1];
                    const eventArgs = args.slice(0, -1);
                    this.emit({
                        event,
                        args: eventArgs,
                        blockNumber: event.blockNumber,
                        transactionHash: event.transactionHash,
                    });
                });
            },
            stop: async () => {
                contract.removeAllListeners(eventInfo.name);
            },
        });
    }
}
exports.EVMContractEventListener = EVMContractEventListener;
//# sourceMappingURL=evm-contract-event.js.map