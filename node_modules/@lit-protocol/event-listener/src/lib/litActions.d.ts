import { ethers } from 'ethers';
import { LitNodeClient } from '@lit-protocol/lit-node-client';
export declare const signWithLitActionCode = "(async () =>  {\n            const signature = await Lit.Actions.signAndCombineEcdsa({\n              toSign,\n              publicKey,\n              sigName,\n            });\n\n            Lit.Actions.setResponse({ response: signature });\n          })();";
interface ExecuteLitAction {
    litNodeClient: LitNodeClient;
    capacityTokenId?: string;
    pkpEthAddress: string;
    pkpPublicKey: string;
    authSigner: ethers.Wallet;
    ipfsId?: string;
    code?: string;
    jsParams?: Record<string, unknown>;
}
export declare function executeLitAction({ litNodeClient, capacityTokenId, pkpEthAddress, pkpPublicKey, authSigner, ipfsId, code, jsParams, }: ExecuteLitAction): Promise<import("dist/packages/types/src").ExecuteJsResponse>;
export {};
